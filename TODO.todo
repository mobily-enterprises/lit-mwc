
TONY
Active:
  ✔ Set up nn-pwa as a clone pf pwa (branch template-minimal-ui) easily updated @done(2019-04-25 21:45) @project(Active)
  ☐ https://github.com/Polymer/pwa-starter-kit/issues/121
    ☐ Actually follow the steps and have www and app files (from latest express) in server/
    ☐ Make PR for documentation update as promised to Polymer team

  ☐ Add simple route to start testing forms
  ☐ Publish nn on NPM
  ☐ Add link to nn to nn-pwa
  ☐ Check that forms are submitted and data is returned

☐ nn-form:
  ☐ Load data from the server before showing the form
  ☐ Overwrite a record (PUT with an existing ID), or create a new one (POST, no ID) or create a record with an arbitrary ID (PUT with a new ID)?
  ☐ Render ALL input fields automatically disabled while the form is being submitted
  ☐ Highlight the problem fields if the form is NOT a success
  ☐ Submit the form when the user presses ENTER on a paper-input widget
  ☐ Refresh the data with the saved info coming back from the server after saving
  ☐ Display messages to the user
  ☐ Have "silent" fields that won't get submitted (will only facilitate presubmit)
  ☐ Native patching https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement
    ☐ <form> has `target` (attribute). This value can be overridden by a formtarget attribute on a <button> or <input> element. Will this work through shadow DOM?
    ☐ document.forms returns the forms. Will the forms in the shadow dom be returned?
    ☐ HTMLFormElement.elements and HTMLFormElement.length are only <button>, <fieldset>, <input>, <object>, etc.

☐ nn-realtime-field (or include in nn-form?):

☐ nn-autocomplete (using datalist):

☐ nn-network:

☐ JsonRestStores2:
  ☐ SimpleSchema: have an async version; or, maybe turn it into a 100% async module
  ☐ JsonRestStores: Maybe have a 'request.fullBody' field which, in case of singleFields, will be populated by request.doc (This is to simplify code in hooks, which right now need to deal with exceptions for single field writes)
  ☐ Multer: Use async functions
  ☐ Multer: ability to assign names based on record IDs
  ☐ Finish docs, in tutorial-like form with examples

☐ Path to nn-pwa:
  ☐ Make basic PWA
  ☐ Write PWA login screen with change password/profile
  ☐ Write basic editing screens (user info, root-level records, etc.)
  ☐ Make simple app with two screens, with Ajax calls, refresh, etc.
  ☐ Add header with back button and history management
  ☐ Make websocket work, with subscriptions and alerts

RAPHAEL
☐ (Tony asks) Shall we reflect the attribute 'tabindex'? Or is it likely to mess up things if the nn element has the same tabIndex as the native element in the shadow dom? Does it even make sense to set it in the shadow dom at all?
  ☐ Needs testing

Components:
☐ Fix Label Mixin for inputs
☐ (Tony's suggestion) Implement basic drawer element
☐ (Tony's suggestion) Implement basic tabs/tab elements
☐ Header (or Top App bar https://material.io/design/components/app-bars-top.html)
☐ Nav bar (or Bottom App Bar https://material.io/design/components/app-bars-bottom.html)
☐ FAB
☐ Toast
☐ Slider (use native)
☐ Switch (maybe checkbox style variant?)
☐ Progress bar

Styling:
☐ Simple theme mechanism (use litElement recommended methods: import css tagged templates, custom css properties)
☐ Text and textarea default theme
☐ Buttons default theme
☐ Checkbox default theme
☐ Advanced theme mechanism (Allow default styles to be overriden either by extending the element or by replacing the default theme css tagged template file)