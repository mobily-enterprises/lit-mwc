define(["exports","./lit-element-34339bae","./StyleableMixin-9aebdd05","./ThemeableMixin-c1113bda"],function(a,b,c,d){'use strict';function e(){var a=b._taggedTemplateLiteral(["\n    <nav>\n      <slot @slotchange=\"","\"></slot>\n    </nav>\n    "]);return e=function(){return a},a}function f(){var a=b._taggedTemplateLiteral(["\n        :host {\n          width: 100%;\n          height: 42px;\n          padding-top: 0;\n        }\n\n        :host nav {\n          border-bottom: 1px solid var(--app-lines-color);\n          display: flex;\n        }\n\n        :host nav ::slotted(*) .icon {\n          fill: var(--app-drawer-text-color);\n        }\n\n        :host nav > ::slotted(*[selected]) .icon {\n          fill: var(--app-header-selected-color);\n        }\n\n        :host nav > ::slotted(*) {\n          color: var(--app-dark-text-color);\n          text-decoration: none;\n          line-height: 30px;\n          padding: 4px 24px;\n          border: unset;\n          border-right: 1px solid var(--app-lines-color);\n          border-bottom: 4px inset transparent;\n          font-size: 0.9em;\n          border-radius: 0;\n          width: 100%;\n          text-align: center;\n        }\n\n        :host nav > ::slotted(*:last-child) {\n          border-right: unset\n        }\n\n        :host nav > ::slotted(*[selected]) {\n          color: var(--app-header-selected-color);\n          border-bottom: 4px solid var(--app-primary-color);\n        }\n\n        :host nav > ::slotted(*:focus) {\n          outline:0 ;\n          background: whitesmoke;\n          /* border: 1px solid #bdbdbd; */\n        }\n\n        :host nav > ::slotted(*:active) {\n          background: #cccccc;\n          border-bottom: 4px inset #bdbdbd;\n          box-shadow: none;\n          animation: fadeIn 0.2s ease-in;\n        }\n\n        :host nav > ::slotted(*[disabled]) {\n          box-shadow: none\n        }\n\n        :host nav > ::slotted(*.icon:active) {\n          background: #cccccc;\n          border: unset;\n          border-radius: 50%;\n        }\n\n        :host nav > ::slotted(*.icon:hover) svg, :host > ::slotted(*:hover) svg {\n          fill: var(--app-primary-color);\n        }\n      "]);return f=function(){return a},a}var g=/*#__PURE__*/function(a){function c(){var a;return b._classCallCheck(this,c),a=b._possibleConstructorReturn(this,b._getPrototypeOf(c).call(this)),a.selected="",a.eventBubbles=!1,a.selectedAttribute="name",a}/** Tabs usage
     * add elements with a slot="tabs" within the nl-tabs tags to create tabs.
     * Tab elements must have an id. Index support will be added soon
     */return b._inherits(c,a),b._createClass(c,null,[{key:"styles",get:function(){return[b._get(b._getPrototypeOf(c),"styles",this)||[],b.css(f())]}},{key:"properties",get:function(){return{default:{type:String},selected:{type:String,reflect:!0},selectedAttribute:{type:String},eventBubbles:{type:Boolean}}}}]),b._createClass(c,[{key:"render",value:function(){return b.html(e(),this._manageSlotted)}},{key:"firstUpdated",value:function(){var a=this,b=this.shadowRoot.querySelector("slot").assignedElements();if(b.length){var c=this["default"]?b.filter(function(b){return b.getAttribute("name")===a["default"]})[0]:b[0],d=c.getAttribute("name");c&&(this.dispatchEvent(new CustomEvent("selected-changed",{detail:{selected:d}})),this.selected=d)}}},{key:"connectedCallback",value:function(){b._get(b._getPrototypeOf(c.prototype),"connectedCallback",this).call(this),this.addEventListener("clicked-slot",this._fireSelectedEvent)}// This adds a click event listener to all slotted children (the tabs)
},{key:"_manageSlotted",value:function(a){var b=a.currentTarget,c=b.assignedElements(),d=!0,e=!1,f=void 0;try{for(var g,h,i=c[Symbol.iterator]();!(d=(g=i.next()).done);d=!0)h=g.value,h.addEventListener("click",this._clickedSlotted.bind(this))}catch(a){e=!0,f=a}finally{try{d||null==i["return"]||i["return"]()}finally{if(e)throw f}}}// Each tab runs this and fires a clicked-slot event, which carries the selected value, It gets the value from the name attribute of the slotted "tab"
},{key:"_clickedSlotted",value:function(a){console.log("slot clicked",this.selectedAttribute),this.dispatchEvent(new CustomEvent("clicked-slot",{detail:{event:a,selected:a.currentTarget.getAttribute(this.selectedAttribute)}}))}// This function runs when the host element receives a clicked-slot event from it's children. It sets the selected property and fires a 'selected-changed' event with that value.
},{key:"_fireSelectedEvent",value:function(a){this.dispatchEvent(new CustomEvent("selected-changed",{detail:{selected:a.detail.selected}})),this.selected=a.detail.selected}}]),c}(d.ThemeableMixin("ee-tabs")(c.StyleableMixin(b.LitElement)));customElements.define("ee-tabs",g),a.EeTabs=g,Object.defineProperty(a,"__esModule",{value:!0})});
