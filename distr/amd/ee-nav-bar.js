define(["exports","./lit-element-34339bae","./StyleableMixin-9aebdd05","./ThemeableMixin-c1113bda"],function(a,b,c,d){'use strict';function e(){var a=b._taggedTemplateLiteral(["\n      <nav>\n        <slot @slotchange=\"","\"></slot>\n      </nav>\n    "]);return e=function(){return a},a}function f(){var a=b._taggedTemplateLiteral(["\n        :host {\n          display: block;\n          position: fixed;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          height: 56px;\n          z-index: 100;\n        }\n\n        :host nav {\n          display: flex;\n          width: 100%;\n          height: 64px;\n          background: var(--ee-nav-bar-background, var(--app-primary-color));\n          color: var(--ee-nav-bar-color, var(--app-light-text-color));\n          fill: var(--ee-nav-bar-color, var(--app-light-text-color));\n        }\n\n        :host nav > ::slotted(*[nav-item]) {\n          margin: 0 auto;\n          padding: 8px 12px;\n          display: block;\n          position: relative;\n          opacity: 0.7;\n          height: 24px;\n          min-width: 80px;\n          max-width: 168px;\n          text-align: center;\n        }\n\n        :host nav > ::slotted(*[nav-item])::after {\n          content: attr(item-label);\n          position: absolute;\n          top: 24px;\n          left: 50%;\n          line-height: 12px;\n          font-size: 12px;\n          transform: translateX(-50%);\n          margin-top: 6px;\n          padding: 6px;\n          white-space: nowrap;\n          text-transform: uppercase;\n        }\n\n        :host nav > ::slotted(*[selected]) {\n          opacity: 1;\n        }\n      "]);return f=function(){return a},a}var g=/*#__PURE__*/function(a){function c(){var a;return b._classCallCheck(this,c),a=b._possibleConstructorReturn(this,b._getPrototypeOf(c).call(this)),a.selected="",a.eventBubbles=!1,a.selectedAttribute="name",a}return b._inherits(c,a),b._createClass(c,null,[{key:"styles",get:function(){return[b._get(b._getPrototypeOf(c),"styles",this)||[],b.css(f())]}},{key:"properties",get:function(){return{selected:{type:String,reflect:!0},selectedAttribute:{type:String},eventBubbles:{type:Boolean}}}}]),b._createClass(c,[{key:"render",value:function(){return b.html(e(),this._manageSlotted)}},{key:"connectedCallback",value:function(){b._get(b._getPrototypeOf(c.prototype),"connectedCallback",this).call(this),this.addEventListener("clicked-slot",this._fireSelectedEvent)}// This adds a click event listener to all slotted children (the tabs)
},{key:"_manageSlotted",value:function(a){var b=a.currentTarget,c=b.assignedNodes(),d=!0,e=!1,f=void 0;try{for(var g,h,i=c[Symbol.iterator]();!(d=(g=i.next()).done);d=!0)h=g.value,h.addEventListener("click",this._clickedSlotted.bind(this))}catch(a){e=!0,f=a}finally{try{d||null==i["return"]||i["return"]()}finally{if(e)throw f}}}// Each tab runs this and fires a clicked-slot event, which carries the selected value, It gets the value from the name attribute of the slotted "tab"
},{key:"_clickedSlotted",value:function(a){console.log("slot clicked",this.selectedAttribute),this.dispatchEvent(new CustomEvent("clicked-slot",{detail:{event:a,selected:a.currentTarget.getAttribute(this.selectedAttribute)}}))}// This function runs when the host element receives a clicked-slot event from it's children. It sets the selected property and fires a 'selected-changed' event with that value.
},{key:"_fireSelectedEvent",value:function(a){this.dispatchEvent(new CustomEvent("selected-changed",{detail:{selected:a.detail.selected}})),this.selected=a.detail.selected}}]),c}(d.ThemeableMixin("ee-nav-bar")(c.StyleableMixin(b.LitElement)));customElements.define("ee-nav-bar",g),a.EeNavBar=g,Object.defineProperty(a,"__esModule",{value:!0})});
